<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Memory Card Matching</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 20px;
        }

        .game-container {
            max-width: 800px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.9);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        .instructions {
            font-size: 18px;
            background: #d1e7dd;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(4, 80px);
            gap: 10px;
            justify-content: center;
            margin-bottom: 20px;
        }

        .grid-item {
            width: 80px;
            height: 80px;
            background-color: #e0f7fa;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 2em;
            border-radius: 10px;
            cursor: pointer;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s;
        }

        .flipped {
            background-color: #fff;
            transform: rotateY(180deg);
        }

        .card-content {
            font-size: 2em;
        }

        .card-back {
            background-color: #00bcd4;
        }

        .timer {
            font-size: 24px;
            margin-top: 20px;
        }

        .check-btn {
            margin-top: 20px;
            font-size: 18px;
        }

        .result {
            margin-top: 30px;
            font-size: 20px;
            font-weight: bold;
        }

        .game-over {
            color: red;
            font-size: 22px;
            margin-top: 30px;
        }

        .instructions h1 {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #007bff;
        }

        .instructions p {
            margin: 10px 0;
            color: #333;
        }
    </style>
</head>
<body>

<div class="game-container">
    <h1>Memory Card Matching Game</h1>

    <div class="instructions">
        <h1>How to Play:</h1>
        <p>In this memory game, you need to match pairs of cards. Click on any card to flip it. Try to remember the position of the cards and match the pairs. When all pairs are matched, you win!</p>
    </div>

    <div class="timer" id="timer">Time left: 30s</div>

    <div class="grid-container" id="grid-container"></div>

    <button class="btn btn-primary check-btn" id="checkBtn" style="display:none;">CHECK</button>

    <div class="result" id="result" style="display:none;"></div>

    <div class="game-over" id="gameOver" style="display:none;">Game Over! You took too long!</div>
</div>

<!-- Bootstrap JS, Popper.js, and jQuery -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js"></script>

<script>
    const emojis = ["🍎", "🍌", "🍍", "🍒", "🍇", "🥑", "🍓", "🍉"];
    let gridItems = [];
    let flippedCards = [];
    let matchedCards = 0;
    let timer = 30; // 30 seconds for the game
    let timerInterval;
    let gameStarted = false;

    // Create and shuffle emojis for grid
    function createGrid() {
        let shuffledEmojis = shuffle([...emojis, ...emojis]);
        const gridContainer = document.getElementById("grid-container");

        shuffledEmojis.forEach((emoji, index) => {
            const gridItem = document.createElement("div");
            gridItem.classList.add("grid-item");
            gridItem.setAttribute("data-index", index);
            gridItem.setAttribute("data-emoji", emoji);
            gridItem.innerHTML = `
                <div class="card-content card-back"></div>
            `;
            gridItem.addEventListener("click", handleCardClick);
            gridItems.push(gridItem);
            gridContainer.appendChild(gridItem);
        });
    }

    // Shuffle function for emojis
    function shuffle(array) {
        return array.sort(() => Math.random() - 0.5);
    }

    // Handle card click event
    function handleCardClick(e) {
        const card = e.target;
        if (flippedCards.length < 2 && !card.classList.contains("flipped")) {
            flipCard(card);
            flippedCards.push(card);

            if (flippedCards.length === 2) {
                checkMatch();
            }
        }
    }

    // Flip a card
    function flipCard(card) {
        card.classList.add("flipped");
        card.querySelector(".card-content").textContent = card.getAttribute("data-emoji");
    }

    // Check if the two flipped cards match
    function checkMatch() {
        const [card1, card2] = flippedCards;
        if (card1.getAttribute("data-emoji") === card2.getAttribute("data-emoji")) {
            matchedCards++;
            flippedCards = [];
            if (matchedCards === emojis.length) {
                clearInterval(timerInterval);
                document.getElementById("result").textContent = "Congratulations! You have matched all the pairs!";
                document.getElementById("result").style.display = "block";
            }
        } else {
            setTimeout(() => {
                flipCardBack(card1);
                flipCardBack(card2);
                flippedCards = [];
            }, 1000);
        }
    }

    // Flip the card back
    function flipCardBack(card) {
        card.classList.remove("flipped");
        card.querySelector(".card-content").textContent = "";
    }

    // Timer countdown for the initial 30 seconds
    function startTimer() {
        timerInterval = setInterval(() => {
            document.getElementById("timer").textContent = `Time left: ${timer}s`;
            if (timer <= 0) {
                clearInterval(timerInterval);
                document.getElementById("gameOver").style.display = "block";
            }
            timer--;
        }, 1000);
    }

    // Start the game
    function startGame() {
        gameStarted = true;
        document.getElementById("gameOver").style.display = "none";
        createGrid();
        startTimer();
    }

    // Start the game immediately when the page loads
    startGame();
</script>

</body>
</html>
